import os
import smtplib
from email.message import EmailMessage
from dotenv import load_dotenv

load_dotenv()

EMAIL_ADDRESS = os.getenv("EMAIL_USERNAME")
EMAIL_PASSWORD = os.getenv("EMAIL_PASSWORD")

def send_meeting_email(recipient: str, subject: str, body: str):
    if not EMAIL_ADDRESS or not EMAIL_PASSWORD:
        raise ValueError("Email credentials not set in environment variables.")

    msg = EmailMessage()
    msg["Subject"] = subject
    msg["From"] = EMAIL_ADDRESS
    msg["To"] = recipient
    msg.set_content(body)

    with smtplib.SMTP_SSL("smtp.gmail.com", 465) as smtp:
        smtp.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
        smtp.send_message(msg)

def format_meeting_analysis_for_email(meeting):
    summary = f"Meeting Summary:\n{meeting['summary']}\n\n"

    action_items = "\n".join(
        [
            f"Task       : {a['task']}\n"
            f"Assignee   : {a.get('assignee', 'N/A')}\n"
            f"Deadline   : {a.get('deadline', 'N/A')}\n"
            f"Status     : {a.get('status', 'new')}\n"
            for a in meeting.get("action_items", [])
        ]
    ) or "No action items were identified.\n"

    decisions = "\n".join(
        [
            f"Decision   : {d['description']}\n"
            f"Date Made  : {d.get('date_made', 'N/A')}\n"
            f"Participants: {', '.join(d.get('participants_involved', [])) or 'N/A'}\n"
            for d in meeting.get("key_decisions", [])
        ]
    ) or "No key decisions were recorded.\n"

    speakers = ", ".join(meeting.get("speakers_detected", [])) or "Not available"
    tone = meeting.get("tone_overview", "Not available")
    topics = ", ".join(meeting.get("important_topics", [])) or "Not available"

    context_info = (
        f"Context Insights:\n"
        f"Speakers Detected : {speakers}\n"
        f"Tone              : {tone}\n"
        f"Key Topics        : {topics}\n"
    )

    closing_note = (
        "\nThis summary was generated by your AI Meeting Assistant.\n"
        "If you have any questions or feedback, please reach out to your meeting coordinator."
    )

    email_body = (
        f"{summary}"
        f"Action Items:\n{action_items}\n"
        f"Key Decisions:\n{decisions}\n"
        f"{context_info}"
        f"{closing_note}"
    )

    return email_body

